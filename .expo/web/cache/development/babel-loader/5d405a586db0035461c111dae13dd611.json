{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\n\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styled from 'styled-components/native';\nimport PageContainer from \"../components/PageContainer\";\nimport PageHeader from \"../components/PageHeader\";\nimport PageInput from \"../components/PageInput\";\nimport TodoItem from \"../components/TodoItem\";\nimport TextButton from \"../components/TextButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState('All'),\n      _useState2 = _slicedToArray(_useState, 2),\n      filterState = _useState2[0],\n      setFilterState = _useState2[1];\n\n  var validateTodo = function validateTodo(text) {\n    return !!text;\n  };\n\n  var todos = [{\n    id: 0,\n    title: \"Make a todo list\",\n    isCompleted: false\n  }, {\n    id: 1,\n    title: \"Check off first item\",\n    isCompleted: true\n  }, {\n    id: 2,\n    title: \"Realize you already did 2 things today\",\n    isCompleted: false\n  }, {\n    id: 3,\n    title: \"Reward yourself with a nice, long nap\",\n    isCompleted: false\n  }];\n\n  var changeFilterState = function changeFilterState(filterState) {\n    setFilterState(filterState);\n  };\n\n  return _jsxs(SafeContainer, {\n    children: [_jsx(ScrollContainer, {\n      children: _jsx(PageWrapper, {\n        children: _jsxs(PageContainer, {\n          children: [_jsx(PageHeader, {\n            title: \"Todo List\"\n          }), _jsx(PageInput, {\n            placeholder: \"Add a new todo\",\n            validate: validateTodo,\n            onChangeText: function onChangeText() {}\n          }), _jsx(TodoList, {\n            data: todos,\n            keyExtractor: function keyExtractor(todo) {\n              return todo.id;\n            },\n            ListEmptyComponent: function ListEmptyComponent() {\n              return _jsx(EmptyTodo, {\n                children: \"There is no todo here!\"\n              });\n            },\n            renderItem: function renderItem(_ref2) {\n              var item = _ref2.item,\n                  index = _ref2.index;\n              return _jsx(TodoItem, {\n                todo: item\n              });\n            }\n          }), _jsxs(FilterContainer, {\n            children: [_jsx(FilterTitle, {\n              children: \"Show:\"\n            }), _jsx(TextButton, {\n              text: \"All\",\n              textColor: function textColor() {\n                return filterState !== 'All' ? '#4a77e5' : '#1f2a4b';\n              },\n              hasUnderline: filterState !== 'All',\n              marginLeft: \"1rem\",\n              width: \"auto\",\n              onClick: function onClick() {\n                return changeFilterState('All');\n              }\n            }), _jsx(TextButton, {\n              text: \"Completed\",\n              textColor: function textColor() {\n                return filterState !== 'Completed' ? '#4a77e5' : '#1f2a4b';\n              },\n              hasUnderline: filterState !== 'Completed',\n              marginLeft: \"1rem\",\n              width: \"auto\",\n              onClick: function onClick() {\n                return changeFilterState('Completed');\n              }\n            }), _jsx(TextButton, {\n              text: \"Incompleted\",\n              textColor: function textColor() {\n                return filterState !== 'Incompleted' ? '#4a77e5' : '#1f2a4b';\n              },\n              hasUnderline: filterState !== 'Incompleted',\n              marginLeft: \"1rem\",\n              width: \"auto\",\n              onClick: function onClick() {\n                return changeFilterState('Incompleted');\n              }\n            })]\n          })]\n        })\n      })\n    }), _jsx(LogoutContainer, {\n      children: _jsx(TextButton, {\n        text: \"Logout\"\n      })\n    })]\n  });\n}\nvar SafeContainer = styled.SafeAreaView(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  height: 100%;\\n  background-color: #f6f7f8;\\n\"])));\nvar ScrollContainer = styled.ScrollView(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  height: 100%;\\n  background-color: #f6f7f8;\\n\"])));\nvar PageWrapper = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  height: 100vh;\\n  alignItems: center;\\n  justifyContent: center;\\n\"])));\nvar TodoList = styled.FlatList(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 1rem;\\n\"])));\nvar FilterContainer = styled.View(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  margin-top: 1.5rem;\\n  margin-bottom: -1.5rem;\\n\"])));\nvar FilterTitle = styled.Text(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  font-family: mark-pro-regular;\\n  font-size: 14px;\\n  font-weight: 500;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  color: #1f2a4b96;\\n\"])));\nvar EmptyTodo = styled.Text(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 1.5rem;\\n  margin-bottom: 1.5rem;\\n  text-align: center;\\n  color: #9ea3b2;\\n  font-style: italic;\\n\"])));\nvar LogoutContainer = styled.View(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  position: fixed;\\n\"])));","map":{"version":3,"names":["React","useState","styled","PageContainer","PageHeader","PageInput","TodoItem","TextButton","LoginScreen","navigation","filterState","setFilterState","validateTodo","text","todos","id","title","isCompleted","changeFilterState","todo","item","index","SafeContainer","SafeAreaView","ScrollContainer","ScrollView","PageWrapper","View","TodoList","FlatList","FilterContainer","FilterTitle","Text","EmptyTodo","LogoutContainer"],"sources":["/home/ivedi/goworkspace/src/github.com/ivedi/foodstyles-todo-fe/screens/TodoListScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  ScrollView,\n  SafeAreaView,\n  FlatList,\n  Text,\n} from 'react-native';\nimport styled from 'styled-components/native';\nimport PageContainer from '../components/PageContainer';\nimport PageHeader from '../components/PageHeader';\nimport PageInput from '../components/PageInput';\nimport TodoItem from '../components/TodoItem';\nimport TextButton from '../components/TextButton';\n\n\nexport default function LoginScreen({ navigation }) {\n  const [filterState, setFilterState] = useState('All');\n  const validateTodo = (text) => !!text;\n  const todos = [{\n    id: 0,\n    title: \"Make a todo list\",\n    isCompleted: false,\n  },{\n    id: 1,\n    title: \"Check off first item\",\n    isCompleted: true,\n  },{\n    id: 2,\n    title: \"Realize you already did 2 things today\",\n    isCompleted: false,\n  },{\n    id: 3,\n    title: \"Reward yourself with a nice, long nap\",\n    isCompleted: false,\n  }];\n\n  const changeFilterState = (filterState) => {\n    setFilterState(filterState);\n  };\n\n  return (\n    <SafeContainer>\n      <ScrollContainer>\n        <PageWrapper>\n          <PageContainer>\n            <PageHeader\n              title=\"Todo List\" />\n            <PageInput\n              placeholder=\"Add a new todo\"\n              validate={validateTodo}\n              onChangeText={() => {}} />\n            <TodoList\n              data={todos}\n              keyExtractor={(todo) => todo.id}\n              ListEmptyComponent={() => \n                <EmptyTodo>\n                  There is no todo here!\n                </EmptyTodo>\n              }\n              renderItem={({ item, index }) => (\n                <TodoItem todo={item} />\n              )} />\n            <FilterContainer>\n              <FilterTitle>Show:</FilterTitle>\n              <TextButton\n                text=\"All\"\n                textColor={() => (\n                  filterState !== 'All'\n                    ? '#4a77e5'\n                    : '#1f2a4b'\n                )}\n                hasUnderline={filterState !== 'All'}\n                marginLeft=\"1rem\"\n                width=\"auto\"\n                onClick={\n                  () => changeFilterState('All')\n                } />\n              <TextButton\n                text=\"Completed\"\n                textColor={() => (\n                  filterState !== 'Completed'\n                    ? '#4a77e5'\n                    : '#1f2a4b'\n                )}\n                hasUnderline={filterState !== 'Completed'}\n                marginLeft=\"1rem\"\n                width=\"auto\"\n                onClick={\n                  () => changeFilterState('Completed')\n                } />\n              <TextButton\n                text=\"Incompleted\"\n                textColor={() => (\n                  filterState !== 'Incompleted'\n                    ? '#4a77e5'\n                    : '#1f2a4b'\n                )}\n                hasUnderline={filterState !== 'Incompleted'}\n                marginLeft=\"1rem\"\n                width=\"auto\"\n                onClick={\n                  () => changeFilterState('Incompleted')\n                } />\n            </FilterContainer>\n          </PageContainer>\n        </PageWrapper>\n      </ScrollContainer>\n      <LogoutContainer>\n        <TextButton\n          text=\"Logout\" />\n      </LogoutContainer>\n    </SafeContainer>\n  );\n}\n\n\nconst SafeContainer = styled.SafeAreaView`\n  width: 100%;\n  height: 100%;\n  background-color: #f6f7f8;\n`;\n\nconst ScrollContainer = styled.ScrollView`\n  width: 100%;\n  height: 100%;\n  background-color: #f6f7f8;\n`;\n\nconst PageWrapper = styled.View`\n  height: 100vh;\n  alignItems: center;\n  justifyContent: center;\n`\n\nconst TodoList = styled.FlatList`\n  margin-bottom: 1rem;\n`;\n\nconst FilterContainer = styled.View`\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-top: 1.5rem;\n  margin-bottom: -1.5rem;\n`;\n\nconst FilterTitle = styled.Text`\n  font-family: mark-pro-regular;\n  font-size: 14px;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #1f2a4b96;\n`;\n\nconst EmptyTodo = styled.Text`\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n  text-align: center;\n  color: #9ea3b2;\n  font-style: italic;\n`;\n\nconst LogoutContainer = styled.View`\n  position: fixed;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}