{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styled from 'styled-components/native';\nimport * as Font from 'expo-font';\nimport Apploading from 'expo-app-loading';\nimport useFonts from \"./hooks/useFonts\";\nimport PageContainer from \"./components/PageContainer\";\nimport PageHeader from \"./components/PageHeader\";\nimport Input from \"./components/Input\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  var loadFonts = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(useFonts());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!isReady) {\n    return _jsx(Apploading, {\n      startAsync: loadFonts,\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      onError: function onError(e) {\n        console.error(e);\n      }\n    });\n  }\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isUsernameValid = _useState4[0],\n      setIsUsernameValid = _useState4[1];\n\n  var handleInput = function handleInput(value) {\n    console.log(value);\n  };\n\n  return _jsxs(AppContainer, {\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(PageContainer, {\n      children: [_jsx(PageHeader, {\n        title: \"Welcome back!\",\n        subtitle: \"Log in to continue.\"\n      }), _jsx(Input, {\n        isValid: false,\n        placeholder: \"Username\",\n        onTextChange: handleInput\n      })]\n    })]\n  });\n}\nvar AppContainer = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  alignItems: center;\\n  justifyContent: center;\\n  background-color: #f6f7f8;\\n\"])));","map":{"version":3,"names":["React","useState","StatusBar","styled","Font","Apploading","useFonts","PageContainer","PageHeader","Input","App","isReady","setIsReady","loadFonts","e","console","error","isUsernameValid","setIsUsernameValid","handleInput","value","log","AppContainer","View"],"sources":["/home/ivedi/goworkspace/src/github.com/ivedi/foodstyles-todo-fe/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Text, View } from 'react-native';\nimport styled from 'styled-components/native';\nimport * as Font from 'expo-font';\nimport Apploading from 'expo-app-loading';\nimport useFonts from './hooks/useFonts';\nimport PageContainer from './components/PageContainer';\nimport PageHeader from './components/PageHeader';\nimport Input from './components/Input';\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false);\n\n  const loadFonts = async () => {\n    await useFonts();\n  };\n\n  if (!isReady) {\n    return (\n      <Apploading\n        startAsync={loadFonts}\n        onFinish={() => setIsReady(true)}\n        onError={e => { console.error(e); }}\n      />\n    );\n  }\n\n  const [isUsernameValid, setIsUsernameValid] = useState(true);\n\n  const handleInput = (value) => {\n    console.log(value);\n   // setIsUsernameValid(value);\n  };\n\n  return (\n    <AppContainer>\n      <StatusBar style=\"auto\" />\n      <PageContainer>\n        <PageHeader title=\"Welcome back!\" subtitle=\"Log in to continue.\" />\n        <Input isValid={false} placeholder=\"Username\" onTextChange={handleInput} />\n      </PageContainer>\n    </AppContainer>\n  );\n\n}\n\nconst AppContainer = styled.View`\n  flex: 1;\n  alignItems: center;\n  justifyContent: center;\n  background-color: #f6f7f8;\n`;\n  \n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAA8BT,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOU,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,IAAMC,SAAS,GAAG;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACVP,QAAQ,EADE;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EAIA,IAAI,CAACK,OAAL,EAAc;IACZ,OACE,KAAC,UAAD;MACE,UAAU,EAAEE,SADd;MAEE,QAAQ,EAAE;QAAA,OAAMD,UAAU,CAAC,IAAD,CAAhB;MAAA,CAFZ;MAGE,OAAO,EAAE,iBAAAE,CAAC,EAAI;QAAEC,OAAO,CAACC,KAAR,CAAcF,CAAd;MAAmB;IAHrC,EADF;EAOD;;EAED,iBAA8Cb,QAAQ,CAAC,IAAD,CAAtD;EAAA;EAAA,IAAOgB,eAAP;EAAA,IAAwBC,kBAAxB;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;IAC7BL,OAAO,CAACM,GAAR,CAAYD,KAAZ;EAED,CAHD;;EAKA,OACE,MAAC,YAAD;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EADF,EAEE,MAAC,aAAD;MAAA,WACE,KAAC,UAAD;QAAY,KAAK,EAAC,eAAlB;QAAkC,QAAQ,EAAC;MAA3C,EADF,EAEE,KAAC,KAAD;QAAO,OAAO,EAAE,KAAhB;QAAuB,WAAW,EAAC,UAAnC;QAA8C,YAAY,EAAED;MAA5D,EAFF;IAAA,EAFF;EAAA,EADF;AAUD;AAED,IAAMG,YAAY,GAAGnB,MAAM,CAACoB,IAAV,wKAAlB"},"metadata":{},"sourceType":"module"}