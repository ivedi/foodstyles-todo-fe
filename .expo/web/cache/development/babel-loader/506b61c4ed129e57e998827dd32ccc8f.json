{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject;\n\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styled from 'styled-components/native';\nimport * as Font from 'expo-font';\nimport Apploading from 'expo-app-loading';\nimport PageContainer from \"./components/PageContainer\";\nimport PageHeader from \"./components/PageHeader\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    \"mark-pro-regular\": require(\"./assets/fonts/mark-pro-regular.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  if (fontsLoaded) {\n    return _jsxs(AppContainer, {\n      children: [_jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(PageContainer, {\n        children: _jsx(PageHeader, {\n          title: \"Welcome back!\",\n          subtitle: \"This is subtitle\"\n        })\n      })]\n    });\n  } else {\n    return _jsx(Apploading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        setFontsLoaded(true);\n      },\n      onError: console.warn\n    });\n  }\n}\nvar AppContainer = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  alignItems: center;\\n  justifyContent: center;\\n  background-color: #f6f7f8;\\n\"])));","map":{"version":3,"names":["React","useState","StatusBar","styled","Font","Apploading","PageContainer","PageHeader","getFonts","loadAsync","require","App","fontsLoaded","setFontsLoaded","console","warn","AppContainer","View"],"sources":["/home/ivedi/goworkspace/src/github.com/ivedi/foodstyles-todo-fe/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Text, View } from 'react-native';\nimport styled from 'styled-components/native';\nimport * as Font from 'expo-font';\nimport Apploading from 'expo-app-loading';\nimport PageContainer from './components/PageContainer';\nimport PageHeader from './components/PageHeader';\n\nconst getFonts = () =>\n  Font.loadAsync({\n    \"mark-pro-regular\": require(\"./assets/fonts/mark-pro-regular.ttf\"),\n  });\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  if (fontsLoaded) {\n  return (\n    <AppContainer>\n      <StatusBar style=\"auto\" />\n      <PageContainer>\n        <PageHeader title=\"Welcome back!\" subtitle=\"This is subtitle\" />\n      </PageContainer>\n    </AppContainer>\n  );\n\n  } else {\n    return (\n      <Apploading\n        startAsync={getFonts}\n        onFinish={() => {\n          setFontsLoaded(true);\n        }}\n        onError={console.warn}\n      />\n    );\n  }\n}\n\nconst AppContainer = styled.View`\n  flex: 1;\n  alignItems: center;\n  justifyContent: center;\n  background-color: #f6f7f8;\n`;\n  \n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;EAAA,OACfJ,IAAI,CAACK,SAAL,CAAe;IACb,oBAAoBC,OAAO;EADd,CAAf,CADe;AAAA,CAAjB;;AAKA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAsCV,QAAQ,CAAC,KAAD,CAA9C;EAAA;EAAA,IAAOW,WAAP;EAAA,IAAoBC,cAApB;;EAEA,IAAID,WAAJ,EAAiB;IACjB,OACE,MAAC,YAAD;MAAA,WACE,KAAC,SAAD;QAAW,KAAK,EAAC;MAAjB,EADF,EAEE,KAAC,aAAD;QAAA,UACE,KAAC,UAAD;UAAY,KAAK,EAAC,eAAlB;UAAkC,QAAQ,EAAC;QAA3C;MADF,EAFF;IAAA,EADF;EASC,CAVD,MAUO;IACL,OACE,KAAC,UAAD;MACE,UAAU,EAAEJ,QADd;MAEE,QAAQ,EAAE,oBAAM;QACdK,cAAc,CAAC,IAAD,CAAd;MACD,CAJH;MAKE,OAAO,EAAEC,OAAO,CAACC;IALnB,EADF;EASD;AACF;AAED,IAAMC,YAAY,GAAGb,MAAM,CAACc,IAAV,wKAAlB"},"metadata":{},"sourceType":"module"}