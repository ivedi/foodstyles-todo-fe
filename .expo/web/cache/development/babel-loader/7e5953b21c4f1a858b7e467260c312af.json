{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject;\n\nimport React, { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport styled from 'styled-components/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Input(_ref) {\n  var placeholder = _ref.placeholder,\n      onChangeText = _ref.onChangeText,\n      validate = _ref.validate;\n\n  var _useState = useState('#e1e1e1'),\n      _useState2 = _slicedToArray(_useState, 2),\n      borderColor = _useState2[0],\n      setBorderColor = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasError = _useState4[0],\n      setHasError = _useState4[1];\n\n  var handleFocus = function handleFocus(borderColor) {\n    setBorderColor(hasError ? borderColor : 'red');\n  };\n\n  var handleBlur = function handleBlur(borderColor) {\n    setBorderColor(hasError ? borderColor : 'red');\n  };\n\n  var handleTextChange = function handleTextChange(text) {\n    onChangeText(text);\n    var isValid = validate(text);\n    setHasError(isValid);\n\n    if (!isValid) {\n      setBorderColor('red');\n    }\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsx(CustomInput, {\n      placeholder: placeholder,\n      placeholderTextColor: \"#9ea3b2\",\n      borderColor: borderColor,\n      onFocus: function onFocus() {\n        handleFocus('#4a77e5');\n      },\n      onBlur: function onBlur() {\n        handleBlur('#e1e1e1');\n      },\n      onChangeText: handleTextChange\n    })\n  });\n}\nvar CustomInput = styled.TextInput(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  padding: 0.5rem 0 0.5rem 0;\\n  font-family: mark-pro-regular; \\n  font-size: 16px;\\n  font-weight: normal;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  border: 0;\\n  borderBottomWidth: 1px;\\n  borderBottomColor: \", \";\\n  outlineWidth: 0;\\n\"])), function (props) {\n  return props.borderColor;\n});","map":{"version":3,"names":["React","useState","styled","Input","placeholder","onChangeText","validate","borderColor","setBorderColor","hasError","setHasError","handleFocus","handleBlur","handleTextChange","text","isValid","CustomInput","TextInput","props"],"sources":["/home/ivedi/goworkspace/src/github.com/ivedi/foodstyles-todo-fe/components/Input.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  TextInput,\n} from 'react-native';\nimport styled from 'styled-components/native';\n\n\nexport default function Input({ placeholder, onChangeText, validate }) {\n  const [borderColor, setBorderColor] = useState('#e1e1e1');\n  const [hasError, setHasError] = useState(false);\n\n  const handleFocus = (borderColor) => {\n    setBorderColor(hasError ? borderColor : 'red');\n  }\n\n  const handleBlur = (borderColor) => {\n    setBorderColor(hasError ? borderColor : 'red');\n  }\n\n  const handleTextChange = (text) => {\n    onChangeText(text);\n    let isValid = validate(text);\n    setHasError(isValid);\n    if (!isValid) {\n      setBorderColor('red');\n    }\n  }\n\n  return (\n    <>\n    <CustomInput\n      placeholder={placeholder}\n      placeholderTextColor=\"#9ea3b2\"\n      borderColor={borderColor}\n      onFocus={() => { handleFocus('#4a77e5'); }}\n      onBlur={() => { handleBlur('#e1e1e1'); }}\n      onChangeText={handleTextChange} />\n    </>\n  );\n}\n\nconst CustomInput = styled.TextInput`\n  padding: 0.5rem 0 0.5rem 0;\n  font-family: mark-pro-regular; \n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  border: 0;\n  borderBottomWidth: 1px;\n  borderBottomColor: ${(props) => props.borderColor};\n  outlineWidth: 0;\n`;\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAIA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAGA,eAAe,SAASC,KAAT,OAAwD;EAAA,IAAvCC,WAAuC,QAAvCA,WAAuC;EAAA,IAA1BC,YAA0B,QAA1BA,YAA0B;EAAA,IAAZC,QAAY,QAAZA,QAAY;;EACrE,gBAAsCL,QAAQ,CAAC,SAAD,CAA9C;EAAA;EAAA,IAAOM,WAAP;EAAA,IAAoBC,cAApB;;EACA,iBAAgCP,QAAQ,CAAC,KAAD,CAAxC;EAAA;EAAA,IAAOQ,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACJ,WAAD,EAAiB;IACnCC,cAAc,CAACC,QAAQ,GAAGF,WAAH,GAAiB,KAA1B,CAAd;EACD,CAFD;;EAIA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACL,WAAD,EAAiB;IAClCC,cAAc,CAACC,QAAQ,GAAGF,WAAH,GAAiB,KAA1B,CAAd;EACD,CAFD;;EAIA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;IACjCT,YAAY,CAACS,IAAD,CAAZ;IACA,IAAIC,OAAO,GAAGT,QAAQ,CAACQ,IAAD,CAAtB;IACAJ,WAAW,CAACK,OAAD,CAAX;;IACA,IAAI,CAACA,OAAL,EAAc;MACZP,cAAc,CAAC,KAAD,CAAd;IACD;EACF,CAPD;;EASA,OACE;IAAA,UACA,KAAC,WAAD;MACE,WAAW,EAAEJ,WADf;MAEE,oBAAoB,EAAC,SAFvB;MAGE,WAAW,EAAEG,WAHf;MAIE,OAAO,EAAE,mBAAM;QAAEI,WAAW,CAAC,SAAD,CAAX;MAAyB,CAJ5C;MAKE,MAAM,EAAE,kBAAM;QAAEC,UAAU,CAAC,SAAD,CAAV;MAAwB,CAL1C;MAME,YAAY,EAAEC;IANhB;EADA,EADF;AAWD;AAED,IAAMG,WAAW,GAAGd,MAAM,CAACe,SAAV,uXAWM,UAACC,KAAD;EAAA,OAAWA,KAAK,CAACX,WAAjB;AAAA,CAXN,CAAjB"},"metadata":{},"sourceType":"module"}